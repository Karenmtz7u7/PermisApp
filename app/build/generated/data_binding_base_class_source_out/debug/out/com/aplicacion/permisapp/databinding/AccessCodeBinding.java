// Generated by view binder compiler. Do not edit!
package com.aplicacion.permisapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.aplicacion.permisapp.R;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AccessCodeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button botonAcept;

  @NonNull
  public final TextInputEditText codeaccess;

  @NonNull
  public final ImageView imageView4;

  @NonNull
  public final LinearLayout ll;

  private AccessCodeBinding(@NonNull ConstraintLayout rootView, @NonNull Button botonAcept,
      @NonNull TextInputEditText codeaccess, @NonNull ImageView imageView4,
      @NonNull LinearLayout ll) {
    this.rootView = rootView;
    this.botonAcept = botonAcept;
    this.codeaccess = codeaccess;
    this.imageView4 = imageView4;
    this.ll = ll;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AccessCodeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AccessCodeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.access_code, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AccessCodeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.botonAcept;
      Button botonAcept = ViewBindings.findChildViewById(rootView, id);
      if (botonAcept == null) {
        break missingId;
      }

      id = R.id.codeaccess;
      TextInputEditText codeaccess = ViewBindings.findChildViewById(rootView, id);
      if (codeaccess == null) {
        break missingId;
      }

      id = R.id.imageView4;
      ImageView imageView4 = ViewBindings.findChildViewById(rootView, id);
      if (imageView4 == null) {
        break missingId;
      }

      id = R.id.ll;
      LinearLayout ll = ViewBindings.findChildViewById(rootView, id);
      if (ll == null) {
        break missingId;
      }

      return new AccessCodeBinding((ConstraintLayout) rootView, botonAcept, codeaccess, imageView4,
          ll);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
