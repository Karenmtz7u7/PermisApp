// Generated by view binder compiler. Do not edit!
package com.aplicacion.permisapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.aplicacion.permisapp.R;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUpdatepasswordBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView cancelbtn;

  @NonNull
  public final TextInputEditText passwordtxt;

  @NonNull
  public final TextInputEditText passwordverifytxt;

  @NonNull
  public final ImageView privacyPol;

  @NonNull
  public final TextView recuperarcontra;

  @NonNull
  public final TextView textalert;

  @NonNull
  public final Button updatePassbtn;

  private ActivityUpdatepasswordBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView cancelbtn, @NonNull TextInputEditText passwordtxt,
      @NonNull TextInputEditText passwordverifytxt, @NonNull ImageView privacyPol,
      @NonNull TextView recuperarcontra, @NonNull TextView textalert,
      @NonNull Button updatePassbtn) {
    this.rootView = rootView;
    this.cancelbtn = cancelbtn;
    this.passwordtxt = passwordtxt;
    this.passwordverifytxt = passwordverifytxt;
    this.privacyPol = privacyPol;
    this.recuperarcontra = recuperarcontra;
    this.textalert = textalert;
    this.updatePassbtn = updatePassbtn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUpdatepasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUpdatepasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_updatepassword, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUpdatepasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancelbtn;
      ImageView cancelbtn = ViewBindings.findChildViewById(rootView, id);
      if (cancelbtn == null) {
        break missingId;
      }

      id = R.id.passwordtxt;
      TextInputEditText passwordtxt = ViewBindings.findChildViewById(rootView, id);
      if (passwordtxt == null) {
        break missingId;
      }

      id = R.id.passwordverifytxt;
      TextInputEditText passwordverifytxt = ViewBindings.findChildViewById(rootView, id);
      if (passwordverifytxt == null) {
        break missingId;
      }

      id = R.id.privacy_pol;
      ImageView privacyPol = ViewBindings.findChildViewById(rootView, id);
      if (privacyPol == null) {
        break missingId;
      }

      id = R.id.recuperarcontra;
      TextView recuperarcontra = ViewBindings.findChildViewById(rootView, id);
      if (recuperarcontra == null) {
        break missingId;
      }

      id = R.id.textalert;
      TextView textalert = ViewBindings.findChildViewById(rootView, id);
      if (textalert == null) {
        break missingId;
      }

      id = R.id.updatePassbtn;
      Button updatePassbtn = ViewBindings.findChildViewById(rootView, id);
      if (updatePassbtn == null) {
        break missingId;
      }

      return new ActivityUpdatepasswordBinding((ConstraintLayout) rootView, cancelbtn, passwordtxt,
          passwordverifytxt, privacyPol, recuperarcontra, textalert, updatePassbtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
