// Generated by view binder compiler. Do not edit!
package com.aplicacion.permisapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.aplicacion.permisapp.R;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainDeleteAccountBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ImageView backbtn;

  @NonNull
  public final Button deleteAccountbtn;

  @NonNull
  public final TextInputEditText emailusertxt;

  @NonNull
  public final TextView ingresaEl;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final ImageView privacyPol;

  @NonNull
  public final TextView recuperarcontra;

  @NonNull
  public final TextView textalert;

  private ActivityMainDeleteAccountBinding(@NonNull ScrollView rootView, @NonNull ImageView backbtn,
      @NonNull Button deleteAccountbtn, @NonNull TextInputEditText emailusertxt,
      @NonNull TextView ingresaEl, @NonNull LinearLayout linearLayout,
      @NonNull ImageView privacyPol, @NonNull TextView recuperarcontra,
      @NonNull TextView textalert) {
    this.rootView = rootView;
    this.backbtn = backbtn;
    this.deleteAccountbtn = deleteAccountbtn;
    this.emailusertxt = emailusertxt;
    this.ingresaEl = ingresaEl;
    this.linearLayout = linearLayout;
    this.privacyPol = privacyPol;
    this.recuperarcontra = recuperarcontra;
    this.textalert = textalert;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainDeleteAccountBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainDeleteAccountBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main_delete_account, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainDeleteAccountBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backbtn;
      ImageView backbtn = ViewBindings.findChildViewById(rootView, id);
      if (backbtn == null) {
        break missingId;
      }

      id = R.id.deleteAccountbtn;
      Button deleteAccountbtn = ViewBindings.findChildViewById(rootView, id);
      if (deleteAccountbtn == null) {
        break missingId;
      }

      id = R.id.emailusertxt;
      TextInputEditText emailusertxt = ViewBindings.findChildViewById(rootView, id);
      if (emailusertxt == null) {
        break missingId;
      }

      id = R.id.ingresa_el_;
      TextView ingresaEl = ViewBindings.findChildViewById(rootView, id);
      if (ingresaEl == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.privacy_pol;
      ImageView privacyPol = ViewBindings.findChildViewById(rootView, id);
      if (privacyPol == null) {
        break missingId;
      }

      id = R.id.recuperarcontra;
      TextView recuperarcontra = ViewBindings.findChildViewById(rootView, id);
      if (recuperarcontra == null) {
        break missingId;
      }

      id = R.id.textalert;
      TextView textalert = ViewBindings.findChildViewById(rootView, id);
      if (textalert == null) {
        break missingId;
      }

      return new ActivityMainDeleteAccountBinding((ScrollView) rootView, backbtn, deleteAccountbtn,
          emailusertxt, ingresaEl, linearLayout, privacyPol, recuperarcontra, textalert);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
